server:
  port: 8082

spring:
  profiles:
    active: dev
  application:
    name: skydive-forecast-analysis-service
  jpa:
    properties:
      hibernate:
        format_sql: true
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
    database-change-log-table: skydive-forecast-analysis.DATABASECHANGELOG
    database-change-log-lock-table: skydive-forecast-analysis.DATABASECHANGELOGLOCK
  kafka:
    bootstrap-servers: localhost:9092  # Or your Kafka cluster
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: weather-report-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'  # For JSON deserialization
    template:
      default-topic: weather-report-requests

springdoc:
  api-docs:
    path: /v3/api-docs/analyses
  swagger-ui:
    path: /swagger-ui.html
    url: /v3/api-docs/analyses.yaml

jwt:
  secret: change-me-please-and-make-it-at-least-32-characters-long

resilience4j.circuitbreaker:
  instances:
    myService:
      slidingWindowSize: 10
      failureRateThreshold: 50
      waitDurationInOpenState: 100
